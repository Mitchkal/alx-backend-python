# Runs django tests on every push and pull request
# ensures workflow installs necessary dependency and sets up a mysql database for running tests
name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests_and_linting:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:9.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: messaging_app_test
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    # pass DB config into django app
    env:
      DB_NAME: messaging_app_test
      DB_USER: test_user
      DB_PASSWORD: test_password
      DB_HOST: localhost
      DB_PORT: 3306

    steps:
      - name: Checkout out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirments.txt
          pip install flake8
          pip install coverage
      - name: Run flake8
        run: flake8.

      - name: Wait for mysql to ready
        run: |
          for i in {1...10}; do 
            if mysqladmin ping -h localhost -u root -proot_password --silent; then
              echo "MYSQL is up and running"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Run Django migrations and tests and generate coverage report
        run: |
          python manage.py makemigrations
          python manage.py migrate
          coverage run python manage.py test --settings=messaging_app.settings.test
          coverage html -d coverage_html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage_html/
